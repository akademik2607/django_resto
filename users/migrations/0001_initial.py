# Generated by Django 5.0.6 on 2024-05-21 17:39

import users.managers
import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('status', models.CharField(choices=[('active', 'פעיל'), ('off', 'לא פעיל'), ('on_leave', 'בחופשה'), ('choose', 'נא לבחור')], default='choose', max_length=30, verbose_name='status')),
                ('role', users.models.CustomMultiSelectField(blank=True, choices=[('בר', 'bar'), ('מלצר\\ית', 'waiter'), ('פס חם', 'hot_streak'), ('פס קר', 'cold_streak'), ('אחמ"ש', 'manager'), ('מנהל', 'director'), ("צ'קר", 'checker'), ('ניקיון', 'cleanliness'), ('הוסטס', 'hostess'), ('מארחת', 'hostess')], max_length=250, verbose_name='roles')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='registered')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
    ]
